import { Controller, Get, HttpCode, HttpStatus, Param, Query, UseGuards,HttpException } from '@nestjs/common';
import {
  ApiBearerAuth,
  ApiOperation,
  ApiResponse,
  ApiTags,
} from '@nestjs/swagger';
import { Authorize } from '@auth/authorize.decorator';
import { {{pascalCase apiName}}Request } from './{{dashCase apiName}}-request';
import { {{pascalCase apiName}}Response } from './{{dashCase apiName}}-response';
import { BaseController } from '@core/base.controller';



@ApiTags('{{pascalCase apiGroupName}}')
{{#if isAuth}}
@ApiBearerAuth()
{{/if}}

@Controller('{{dashCase moduleName}}/{{pathDashCase routePath}}')
export class {{pascalCase apiName}}Controller extends BaseController {

   @Get{{#if (eq getMethodType "pathParams")}}(':id'){{else}}(){{/if}}
  @ApiResponse({status: HttpStatus.OK,description: '',type: {{pascalCase apiName}}Response,})
  @ApiOperation({ operationId: '{{camelCase apiName}}' })
  {{#if isAuth}}
@Authorize(/*Roles*/)
{{/if}}
  @HttpCode(200)
  async execute(
    {{#if (eq getMethodType "queryParams")}}@Query() param: {{pascalCase apiName}}Request{{/if}}
    {{#if (eq getMethodType "pathParams")}}@Param('id') id: string{{/if}}
  ): Promise<{{pascalCase apiName}}Response> {
    throw new HttpException('Method not implemented.', HttpStatus.NOT_IMPLEMENTED);
  }
}