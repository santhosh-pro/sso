generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model AuditLog {
  id        String    @id @default(uuid())
  action    String?   @map("action")
  operation String?   @map("operation")
  tableName String?   @map("table_name")
  recordId  String?   @map("record_id")
  oldValue  Json?     @map("old_value")
  newValue  Json?     @map("new_value")
  createdBy String?   @map("created_by")
  createdAt DateTime? @default(now()) @map("created_at")
  createdIp String?   @map("created_ip")

  @@map("_audit_logs")
}

model MetaData {
  id   String  @id
  name String  @map("name")
  desc String? @map("desc")
  type String  @map("type")

  @@map("meta_data")
}

enum Role {
  MEMBER
  MODRATOR
  DEV
  SUPER_ADMIN
}

model User {
  id          String  @id @default(uuid())
  firstName   String  @map("first_name")
  lastName    String? @map("last_name")
  email       String
  phoneNumber String? @map("phone_number")
  username    String  @unique
  password    String? @map("password")
  role        Role    @default(MEMBER)
  isVerified  Boolean @default(false) @map("is_verified")
  isActive    Boolean @default(true) @map("is_active")

  refreshTokens RefreshToken[]

  createdBy String?   @map("created_by")
  createdAt DateTime  @default(now()) @map("created_at")
  createdIp String?   @map("created_ip")
  updatedBy String?   @map("updated_by")
  updatedAt DateTime? @updatedAt @map("updated_at")
  updatedIp String?   @map("updated_ip")

  authorizationCodes AuthorizationCode[]

  @@map("users")
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  clientId  String
  expiresAt DateTime
  revoked   Boolean  @default(false)

  user   User   @relation(fields: [userId], references: [id])
  client Client @relation(fields: [clientId], references: [id])

  createdBy String?   @map("created_by")
  createdAt DateTime  @default(now()) @map("created_at")
  createdIp String?   @map("created_ip")
  updatedBy String?   @map("updated_by")
  updatedAt DateTime? @updatedAt @map("updated_at")
  updatedIp String?   @map("updated_ip")

  @@map("refresh_tokens")
}

model AuthorizationCode {
  id                  String   @id @default(uuid())
  code                String   @unique
  clientId            String
  userId              String
  redirectUri         String   @map("redirect_uri")
  codeChallenge       String?  @map("code_challenge")
  codeChallengeMethod String?  @map("code_challenge_method")
  state               String?
  expiresAt           DateTime @map("expires_at")
  isUsed              Boolean  @default(false) @map("is_used")

  client Client @relation(fields: [clientId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  createdBy String?   @map("created_by")
  createdAt DateTime  @default(now()) @map("created_at")
  createdIp String?   @map("created_ip")
  updatedBy String?   @map("updated_by")
  updatedAt DateTime? @updatedAt @map("updated_at")
  updatedIp String?   @map("updated_ip")

  @@map("authorization_codes")
}

model Client {
  id           String @id @default(uuid())
  name         String
  clientId     String @unique
  clientSecret String

  refreshTokens RefreshToken[]

  createdBy String?   @map("created_by")
  createdAt DateTime  @default(now()) @map("created_at")
  createdIp String?   @map("created_ip")
  updatedBy String?   @map("updated_by")
  updatedAt DateTime? @updatedAt @map("updated_at")
  updatedIp String?   @map("updated_ip")

  authorizationCodes AuthorizationCode[]
  redirectUrls       RedirectURL[]

  @@unique([clientId, clientSecret])
  @@map("clients")
}

model RedirectURL {
  id       String @id @default(uuid())
  url      String
  clientId String

  createdBy String?   @map("created_by")
  createdAt DateTime  @default(now()) @map("created_at")
  createdIp String?   @map("created_ip")
  updatedBy String?   @map("updated_by")
  updatedAt DateTime? @updatedAt @map("updated_at")
  updatedIp String?   @map("updated_ip")

  client Client @relation(fields: [clientId], references: [id])

  @@map("redirect_urls")
}